name: Scrape TradingView + publish + notify Make

permissions:
  contents: write
  pages: write
  id-token: write 
  
on:
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch:

jobs:
  scrape-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Cache global npm
      - name: Cache NPM global
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-global-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-global-

      # Cache node_modules
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install deps
        run: npm ci --no-audit --no-fund

      - name: Run scraper and write summary
        id: run_scraper
        run: |
          node src/generate-feed.js
          node src/write-scrape-summary.js
          cat scrape_summary.txt || true

      - name: Read summary
        id: read_summary
        run: |
          TOTAL=$(grep 'TOTAL_ITEMS' scrape_summary.txt | cut -d'=' -f2)
          NEW=$(grep 'NEW_ITEMS' scrape_summary.txt | cut -d'=' -f2)
          echo "total=${TOTAL}" >> $GITHUB_OUTPUT
          echo "new=${NEW}" >> $GITHUB_OUTPUT

      - name: Upload debug artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: scraper-debug
          path: |
            page.html
            page.png
            feed.json
            diff.json

      - name: Commit feed.json to gh-pages (if new items)
        if: steps.read_summary.outputs.new != '0'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          mkdir -p public
          cp feed.json public/feed.json
          git add public/feed.json || true
          git commit -m "Update feed.json (auto)" || echo "no changes"

      - name: Deploy to gh-pages via action
        if: steps.read_summary.outputs.new != '0'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

      # ðŸš€ Novo passo: notificar Make em tempo real
      - name: Notify Make webhook with diff.json
        if: steps.read_summary.outputs.new != '0'
        env:
          MAKE_WEBHOOK: ${{ secrets.MAKE_WEBHOOK }}
        run: |
          echo "Posting diff.json to Make..."
          curl -s -X POST \
            -H "Content-Type: application/json" \
            --data @diff.json \
            "$MAKE_WEBHOOK" || echo "Failed to post diff.json"

      - name: Show artifacts
        if: always()
        run: |
          echo "feed.json (first lines):"
          head -n 20 feed.json || true
          echo "diff.json (first lines):"
          head -n 20 diff.json || true
          echo "scrape_summary.txt:"
          cat scrape_summary.txt || true
